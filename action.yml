name: 'Automatic Version Bumper'
# Previous inputs and outputs remain the same...

runs:
  using: 'composite'
  steps:
    # Previous steps remain the same until extract-notes...

    - name: Extract release notes
      if: env.BUMP != 'none' && env.NEW_VERSION != ''
      shell: bash
      id: extract-notes
      run: |
        PR_TITLE="${{ github.event.pull_request.title }}"
        PR_NUMBER="${{ github.event.pull_request.number }}"
        
        # Format the release notes in the desired format
        RELEASE_NOTES="Changes in this Release\n"
        RELEASE_NOTES+="* PR: #${PR_NUMBER}\n"
        RELEASE_NOTES+="* Title: ${PR_TITLE}\n"
        
        # Escape special characters for GitHub Actions
        RELEASE_NOTES="${RELEASE_NOTES//'%'/'%25'}"
        RELEASE_NOTES="${RELEASE_NOTES//$'\n'/'%0A'}"
        RELEASE_NOTES="${RELEASE_NOTES//$'\r'/'%0D'}"
        
        echo "release_notes=${RELEASE_NOTES}" >> $GITHUB_OUTPUT
        echo "RELEASE_NOTES=${RELEASE_NOTES}" >> $GITHUB_ENV

    - name: Create and push tag
      if: env.BUMP != 'none' && env.NEW_VERSION != ''
      shell: bash
      run: |
        git tag -a "v$NEW_VERSION" -m "Release v$NEW_VERSION"
        git push origin "v$NEW_VERSION"

    - name: Create Release
      if: env.BUMP != 'none' && env.NEW_VERSION != ''
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
      run: |
        # Create JSON payload for the release
        jq -n \
          --arg tag_name "v$NEW_VERSION" \
          --arg name "Release v$NEW_VERSION" \
          --arg body "$RELEASE_NOTES" \
          --argjson draft ${{ inputs.draft }} \
          --argjson prerelease ${{ inputs.prerelease }} \
          '{
            tag_name: $tag_name,
            name: $name,
            body: $body,
            draft: $draft,
            prerelease: $prerelease
          }' > release_payload.json
        
        # Create release using GitHub API
        curl \
          -X POST \
          -H "Authorization: token $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          "https://api.github.com/repos/$GITHUB_REPOSITORY/releases" \
          -d @release_payload.json
