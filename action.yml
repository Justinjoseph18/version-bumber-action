```yaml
name: 'Advanced Version Bumper'
description: 'Semantic versioning with GitHub Secrets storage'
inputs:
  initial_version:
    description: 'Initial version to start from'
    required: false
    default: '23.0.0'

runs:
  using: 'composite'
  steps:
    - name: Bump Version
      id: version-bump
      shell: bash
      run: |
        # Get current version from GitHub Secrets or input
        CURRENT_VERSION="${{ inputs.initial_version }}"
        
        # Determine PR type
        PR_TITLE="${{ github.event.pull_request.title }}"
        
        # Split version
        IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"

        # Version bump logic
        if [[ $PR_TITLE =~ ^feat!: || $PR_TITLE =~ ^BREAKING ]]; then
          NEW_VERSION="$((MAJOR + 1)).0.0"
        elif [[ $PR_TITLE =~ ^feat: ]]; then
          # If last bump was major, increment minor
          if [[ "$MAJOR" != "23" ]]; then
            NEW_VERSION="${MAJOR}.1.0"
          else
            NEW_VERSION="$((MAJOR + 1)).0.0"
          fi
        elif [[ $PR_TITLE =~ ^fix: ]]; then
          NEW_VERSION="${MAJOR}.${MINOR}.$((PATCH + 1))"
        else
          NEW_VERSION="$CURRENT_VERSION"
        fi

        # Update GitHub Secret
        PUBLIC_KEY_RESPONSE=$(gh api /repos/${{ github.repository }}/actions/secrets/public-key)
        PUBLIC_KEY=$(echo "$PUBLIC_KEY_RESPONSE" | jq -r .key)
        KEY_ID=$(echo "$PUBLIC_KEY_RESPONSE" | jq -r .key_id)
        
        ENCRYPTED_VALUE=$(echo -n "$NEW_VERSION" | base64 | xargs -0 python3 -c "
import base64
import nacl
import nacl.encoding
import nacl.public

public_key = '$PUBLIC_KEY'
message = '$NEW_VERSION'

public_key = nacl.public.PublicKey(base64.b64decode(public_key), nacl.encoding.Base64Encoder())
sealed_box = nacl.public.SealedBox(public_key)
encrypted = sealed_box.encrypt(message.encode('utf-8'))
print(base64.b64encode(encrypted).decode('utf-8'))
")
        
        # Update secret
        gh api --method PUT \
          -H "Accept: application/vnd.github+json" \
          /repos/${{ github.repository }}/actions/secrets/CURRENT_VERSION \
          -f encrypted_value="$ENCRYPTED_VALUE" \
          -f key_id="$KEY_ID"
        
        # Output and store new version
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "$NEW_VERSION" > .version
      env:
        GH_TOKEN: ${{ github.token }}
```
